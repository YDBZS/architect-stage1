<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.architect.mapper.OrdersMapperCustom">


    <resultMap id="myOrdersVO" type="org.architect.pojo.vo.MyOrdersVO">
        <id column="orderId" property="orderId" jdbcType="INTEGER"/>
        <result column="createdTime" property="createdTime" jdbcType="VARCHAR"/>
        <result column="payMethod" property="payMethod" jdbcType="INTEGER"/>
        <result column="realPayAmount" property="realPayAmount"/>
        <result column="postAmount" property="postAmount"/>
        <result column="orderStatus" property="orderStatus"/>
        <result column="isComment" property="isComment"/>
        <collection property="subOrderItemList" select="getSubItems" column="orderId" ofType="org.architect.pojo.vo.MySubOrderItemVO">
            <id column="itemId" property="itemId" jdbcType="INTEGER"/>
            <result column="itemName" property="itemName" jdbcType="VARCHAR"/>
            <result column="itemImg" property="itemImg" jdbcType="INTEGER"/>
            <result column="itemSpecName" property="itemSpecName"/>
            <result column="buyCounts" property="buyCounts"/>
            <result column="price" property="price"/>
        </collection>
    </resultMap>


    <select id="queryMyOrders" parameterType="map" resultMap="myOrdersVO">
        select
            od.id orderId,
            od.created_time createdTime,
            od.pay_method payMethod,
            od.real_pay_amount realPayAmount,
            od.post_amount postAmount,
            os.order_status orderStatus,
            od.is_comment isComment
        from
            orders od
        left join
            order_status os
        on
            od.id = os.order_id
        where
            od.user_id = #{paramsMap.userId}
        and
            od.is_delete = 0
        <if test="paramsMap.orderStatus != null">
            and os.order_status = #{paramsMap.orderStatus}
        </if>
        order by
            od.updated_time
    </select>
    
    <select id="getSubItems" parameterType="string" resultType="org.architect.pojo.vo.MySubOrderItemVO">
        select
            oi.item_id itemId,
            oi.item_name itemName,
            oi.item_img itemImg,
            oi.item_spec_name itemSpecName,
            oi.buy_counts buyCounts,
            oi.price
        from
            order_items oi
        where
            oi.order_id = #{orderId}
    </select>


    <select id="queryMyOrdersDonotUse" parameterType="map" resultMap="myOrdersVO">
        select
            od.id orderId,
            od.created_time createdTime,
            od.pay_method payMethod,
            od.real_pay_amount realPayAmount,
            od.post_amount postAmount,
            os.order_status orderStatus,
            oi.item_id itemId,
            oi.item_name itemName,
            oi.item_img itemImg,
            oi.item_spec_name itemSpecName,
            oi.buy_counts buyCounts,
            oi.price
        from
            orders od
        left join
            order_status os
        on
            od.id = os.order_id
        left join
            order_items oi
            on od.id = oi.order_id
        where
            od.user_id = #{paramsMap.userId}
        and
            od.is_delete = 0
        <if test="paramsMap.orderStatus != null">
            and os.order_status = #{paramsMap.orderStatus}
        </if>
        order by
            od.updated_time
    </select>

    <select id="getMyorderStatusCounts" parameterType="map" resultType="int">
        select count(1)
        from
            orders o
        left join
            order_status os
        on
            o.id = os.order_id
        where
            o.user_id = #{paramMap.userId}
        and
            os.order_status = #{paramMap.orderStatus}
        and
            o.is_comment = 0
        <if test="paramMap.isComment != null">
            and o.is_comment = #{paramMap.isComment}
        </if>
    </select>


    <select id="getMyOrderTrend" parameterType="map" resultType="org.architect.pojo.OrderStatus">
        SELECT
            os.order_id as orderId,
            os.order_status as orderStatus,
            os.created_time as createdTime,
            os.pay_time as payTime,
            os.deliver_time as deliverTime,
            os.success_time as successTime,
            os.close_time as closeTime,
            os.comment_time as commentTime
        FROM
            orders o
        LEFT JOIN
        order_status os
        on
            o.id = os.order_id
        WHERE
            o.is_delete = 0
        AND
            o.user_id = #{paramMap.userId}
        AND
            os.order_status in (20, 30, 40)
        ORDER BY
            os.order_id
        DESC
    </select>

</mapper>